#include "arduino/arduino.ceu"

#define RX
#define TX
#define ID 0x30
#define TO (0x30 + (0x31-ID))

#define TX_PIN      7
#define RX_PIN      8

native/pre do
    ##include <VirtualWire.h>
end
{
#ifdef TX
    vw_set_tx_pin(TX_PIN);
    //vw_set_ptt_inverted(true);
    vw_setup(2000);     // bps
#endif
#ifdef RX
    //vw_set_ptt_inverted(true);
    vw_set_rx_pin(RX_PIN);
    vw_setup(2000);     // bps
    vw_rx_start();      // Inicializa o receptor
#endif
}

_Serial.begin(9600);
_Serial.print("## ID ");
_Serial.println(ID, HEX);

par do
    var int i = 0;
    every 1s do
#ifdef TX
        i = i + 1;
        var u8 to = TO;
        {{
            vw_send(@(&&to), 1);
            vw_wait_tx();
            Serial.print("-> ");
            Serial.println(@i);
        }}
#endif
    end
with
    loop do
        await async do
#ifdef RX
            loop do
                var u8 to  = 10;
                var u8 len = 10;
                native/nohold _vw_get_message;
                if _vw_get_message(&&to, &&len) as bool then
                    //_ceu_dbg_assert(len == 1);
                    _Serial.print("<- ");
                    _Serial.print(to, HEX);
                    _Serial.print(" : ");
                    _Serial.println(len);
                    if to == ID then
                        break;
                    end
                end
            end
            _Serial.println("OK!");
#endif
        end
    end
end
