#ifdef OUTPUT_OLED
{
    display.setTextColor(WHITE);
    display.setTextSize(2);
    display.setCursor(0,0);
    display.print(F("Config..."));
    display.display();
}
#else
_Serial.println(_F("Config..."));
#endif

par/or do
    var u8 id;
    var bool is_fore;
    pool[1] Tone tones;
    loop do
        (id,is_fore) = await IN_TOUCH;
#ifdef OUTPUT_OLED
        _display.setCursor(0,0);
        _display.print(id);
#else
        {
            Serial.print("id: ");  Serial.print(@id);
            Serial.print(" ");
            Serial.print("f/b: "); Serial.println(@is_fore);
        }
#endif
        if is_fore then
            spawn Tone_Fore in tones;
        else
            spawn Tone_Back in tones;
        end
    end
with
    var s16 back = 0;
    var s16 fore = 0;

    var byte c;
    every c in SERIAL_RECEIVE_BYTE do
        var s8 v = do
            if (c == {'F'}) as bool then
                fore = fore + 10;
                escape {0b10000000};
            else/if (c == {'f'}) as bool then
                fore = fore - 10;
                escape {0b01000000};
            else/if (c == {'B'}) as bool then
                back = back + 10;
                escape {0b00100000};
            else/if (c == {'b'}) as bool then
                back = back - 10;
                escape {0b00010000};
            else/if (c == {'G'}) as bool then
                escape {0b10000001};
            else/if (c == {'g'}) as bool then
                escape {0b01000001};
            else/if (c == {'C'}) as bool then
                escape {0b00100001};
            else/if (c == {'c'}) as bool then
                escape {0b00010001};
            else
                escape 0;
            end
        end;
        _radio_write(&&v, 1);

        if v == 0 then
            break;
        end

        //_Serial.print("F: ");
        //_Serial.println(fore);
        //_Serial.print("B: ");
        //_Serial.println(back);
    end

end

//_Serial.println("Start...");
