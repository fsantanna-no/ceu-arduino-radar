#ifndef OUTPUT_OLED
    #error TODO
#endif

spawn do
    pool[1] Tone tones;
    loop do
        var u8 id = await IN_TOUCH;
        _oled.set2X();
        _oled.setCursor(80,3);
        _oled.print(id);
        await 250ms;
        _oled.setCursor(80,3);
        _oled.print(_F(" "));
        spawn Tone_Touch in tones;
    end
end

do
    var int id = 2;
    var int i;
    loop i do
        id = 3 - id;

        _oled.clear();
        _oled.set1X();
        _oled.print(_F("Config "));
        if id == 1 then
            _oled.print(_F("ESQ..."));
        else
            _oled.print(_F("DIR..."));
        end

        var int cfg = 0;
        loop do
            _oled.set2X();
            _oled.setCursor(0,3);
            _oled.print("   ");
            _oled.setCursor(0,3);
            _oled.print(cfg);

            var int but = await IN_CONFIG;
            if but == 0 then
                watching 500ms do
                    var int but_ = await IN_CONFIG until but_==0;
                    var byte v = 0;
                    //_radio_write(&&v, 1);
                    break/i;
                end
                var byte v = (id << 4);
                //_radio_write(&&v, 1);
                break;
            end

            _ceu_dbg_assert(but==1 or but==-1);
            cfg = cfg + but*10;

            var byte v = (id << 4);
            if but == 1 then
                v = v | {0b00000010};
            else
                v = v | {0b00000001};
            end
            //_radio_write(&&v, 1);
        end
    end
end

_oled.clear();
_oled.set1X();
_oled.print(_F("Config OK?"));

par/and do
    var u8 id = await IN_TOUCH until id==1;
with
    var u8 id = await IN_TOUCH until id==2;
end

_oled.clear();
_oled.set1X();
_oled.print(_F("Config OK!"));

await 1s;

//_Serial.println("Start...");
