par/or do
    var u8 id;
    var bool is_fore;
    pool[1] Tone tones;
    loop do
        (id,is_fore) = await IN_TOUCH;
#ifdef OUTPUT_OLED
        _oled.set2X();
        _oled.setCursor(80,3);
        _oled.print(id);
        await 250ms;
        _oled.setCursor(80,3);
        _oled.print(_F(" "));
#else
        {
            Serial.print("id: ");  Serial.print(@id);
            Serial.print(" ");
            Serial.print("f/b: "); Serial.println(@is_fore);
        }
#endif
        if is_fore then
            spawn Tone_Fore in tones;
        else
            spawn Tone_Back in tones;
        end
    end
with
    var int id  = 1;
    var int i;
    loop i do
        id = 1 - id;

#ifdef OUTPUT_OLED
        _oled.clear();
        _oled.set1X();
        _oled.print(_F("Config "));
        if id == 0 then
            _oled.print(_F("ESQ..."));
        else
            _oled.print(_F("DIR..."));
        end
#else
        _Serial.print(_F("Config..."));
        #error TODO
#endif

        var int cfg = 0;
        loop do
#ifdef OUTPUT_OLED
            _oled.set2X();
            _oled.setCursor(0,3);
            _oled.print(cfg);
#else
            #error TODO
#endif

            var int but = await IN_CONFIG;
            if but == 0 then
                watching 500ms do
                    var int but_ = await IN_CONFIG until but_==0;
                    break/i;
                end
                break;
            end

            _ceu_dbg_assert(but==1 or but==-1);
            cfg = cfg + but*10;

            var byte v = (id << 4);
            if but == 1 then
                v = v | {0b00000010};
            else
                v = v | {0b00000001};
            end
            //_radio_write(&&v, 1);
        end
    end
end

//_Serial.println("Start...");
