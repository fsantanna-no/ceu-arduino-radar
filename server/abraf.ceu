#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define MAX(a,b) ((a) > (b) ? (a) : (b))

native/pos do
    u16 A_ATAS[3];

    u8 TABELA_DE_SEQUENCIAS[50] = {
        0, 90,90,90,90, 83,83, 76,76, 69,69, 62,62, 55,55, 46,46, 37,37,
           28,28,19,19, 10,10,  5, 5,  4, 4,  3, 3,  2, 2,  1, 1,  0 };

    u16 TABELA_DE_INTENSIDADE (u16 atas) {
        if (atas < 150) {
            return 0;
        } else if (atas < 156) {
            return 1;
        } else if (atas < 161) {
            return 2;
        } else if (atas < 166) {
            return 3;
        } else if (atas < 171) {
            return 4;
        } else if (atas < 176) {
            return 5;
        } else if (atas < 181) {
            return 6;
        } else if (atas < 186) {
            return 7;
        } else if (atas < 191) {
            return 8;
        } else if (atas < 196) {
            return 9;
        } else if (atas < 201) {
            return 10;
        } else if (atas < 206) {
            return 12;
        } else if (atas < 211) {
            return 14;
        } else if (atas < 216) {
            return 15;
        } else if (atas < 221) {
            return 18;
        } else if (atas < 226) {
            return 20;
        } else if (atas < 231) {
            return 22;
        } else if (atas < 236) {
            return 25;
        } else if (atas < 241) {
            return 30;
        } else if (atas < 246) {
            return 35;
        } else if (atas < 251) {
            return 40;
        } else if (atas < 256) {
            return 45;
        } else if (atas < 261) {
            return 50;
        } else if (atas < 266) {
            return 55;
        } else if (atas < 271) {
            return 60;
        } else if (atas < 276) {
            return 65;
        } else if (atas < 281) {
            return 67;
        } else if (atas < 286) {
            return 69;
        } else {
            return 70;
        }
    }
end

par do
    every out_game_ini do
        {
            A_ATAS[1] = 0;
            A_ATAS[2] = 0;
        }
    end
with
    var u16 seqs;
    every seqs in out_game_end do
        var int  min   = {MIN(A_ATAS[1], A_ATAS[2])};
        var int  max   = {MAX(A_ATAS[1], A_ATAS[2])};
        var real ratio = min/(max as real);
        var int  n_seq = do if (seqs>=35) then escape 0; else escape {TABELA_DE_SEQUENCIAS[@seqs]}; end end;
        var int  n_ata = min + max;
        var real n_equ = ratio*n_ata/4.1;
        var int  n_int = {TABELA_DE_INTENSIDADE(@n_ata)};

        _oled.clear();
        _oled.set1X();
        _oled.println(_F("ABRAF"));
        _oled.println(_F("----------------"));

        _oled.print(_F("Seq: "));
        _oled.print(seqs);
        _oled.print(_F(" = "));
        _oled.println(n_seq);

        _oled.print(_F("Ata: "));
        _oled.print(min);
        _oled.print(_F("/"));
        _oled.print(max);
        _oled.print(_F(" = "));
        _oled.println(n_ata);

        _oled.print(_F("Equ: "));
        _oled.print(ratio);
        _oled.print(_F(" = "));
        _oled.println(n_equ);

        _oled.print(_F("Int: "));
        _oled.print(n_ata);
        _oled.print(_F(" = "));
        _oled.println(n_int);

        _oled.println(_F("----------------"));
        _oled.print(_F("TOT: "));
        _oled.println(n_seq+n_ata+n_int+n_equ+100);
    end
with
    var u16  touch;
    var u8   id;
    var u32  dt;
    var bool is_att;
    every (touch,id,dt,is_att) in out_touch do
        if is_att then
            {A_ATAS[@id]++;}
        end
    end
end
