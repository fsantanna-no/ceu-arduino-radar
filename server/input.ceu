native _radio;
native/nohold _radio_read;
native/pos do
    ##include <SPI.h>
    ##include <nRF24L01.h>
    ##include <RF24.h>
    ##define radio_read(a,b) radio.read(a,b)
    const uint64_t pipe =  0xE8E8F0F0E1LL;
    RF24 radio(8,7);

    tceu_callback_ret CB_INPUT_F (int cmd, tceu_callback_arg p1, tceu_callback_arg p2, const char* file, u32 line) {
        tceu_callback_ret ret = { .is_handled=0 };
        if (cmd != CEU_CALLBACK_OUTPUT) {
            return ret;
        }
        switch (p1.num) {
            case CEU_OUTPUT_GET_TIME:
                *(*((u32**)p2.ptr)) = millis();
                ret.is_handled = 1;
                break;
        }
        return ret;
    }
    tceu_callback CB_INPUT = { &CB_INPUT_F, NULL };
end

{ 
    ceu_callback_register(&CB_INPUT);
    radio.begin();
    radio.setAutoAck(false);
    //radio.setDataRate(RF24_250KBPS);
    radio.setDataRate(RF24_1MBPS);
    radio.openReadingPipe(1,pipe);
    radio.startListening();
}

spawn do
    await async do
        loop do
            if _radio.available() as bool then
                var u8 v = _;
                _radio_read(&&v, 1);
                //{Serial.print("read: ");}
                //{Serial.println(@v);}
                emit IN_TOUCH(v);
            end
        end
    end
end
