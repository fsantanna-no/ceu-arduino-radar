#include "arduino/arduino.ceu"

#define PIEZO_THRESHOLD 10
#define PIN_LED(x)      PIN_10(x)
#define PIN_FORE        A0
#define PIN_BACK        A1
#define PIN_ID          6

output bool PIN_10;     // LED
input  bool PIN_06;     // ID

native _radio;
native/nohold _radio_write;
native/pos do
    ##include <SPI.h>
    ##include <nRF24L01.h>
    ##include <RF24.h>
    ##define radio_write(a,b) radio.write(a,b)
    const uint64_t pipe =  0xE8E8F0F0E1LL;
    RF24 radio(8,7);
end

{ 
    radio.begin();
    radio.setAutoAck(false);
    //radio.setDataRate(RF24_250KBPS);
    radio.setDataRate(RF24_1MBPS);
    radio.openWritingPipe(pipe);
}

code/await Piezo (var u8 pin) -> (event void ok, var u16 avg) -> FOREVER do
    var[10*] u16 vals = [ 0,0,0,0,0,0,0,0,0,0 ];
    var u16 sum = 0;
    avg = 0;
    loop do
        var int v = _analogRead(pin);
        sum = sum + v - vals[0];
        $vals = $vals - 1;
        vals = vals .. [v];
        avg = sum/10;
_Serial.println(avg);
        if avg > PIEZO_THRESHOLD then
            emit ok;
        end
        await async do end;
    end
end

var& Piezo piezoF = spawn Piezo(PIN_FORE);
var& Piezo piezoB = spawn Piezo(PIN_BACK);

code/await Hit (void) -> bool do
    par/or do
        await outer.piezoF.ok;
    with
        await outer.piezoB.ok;
    end
    escape outer.piezoF.avg >= outer.piezoB.avg;
end

code/await Led (void) -> void do
    emit PIN_LED(true);
    do finalize with
        emit PIN_LED(false);
    end
    await 500ms;
end

pool[2] Led leds;

_Serial.begin(9600);

var u8 id = _digitalRead(PIN_ID);
loop do
    var bool is_fore = await Hit();
    spawn Led() in leds;
    _Serial.print("id: ");  _Serial.print(id);
    _Serial.print("f/b: "); _Serial.println(is_fore);
    var u8 v = (id | ((is_fore as u8)<<4));
    var int i;
    loop i in [1->5] do
        _radio_write(&&id, 1);
        await async do end;
    end
    id = 1-id;
    await 200ms;
end
