native _MS;
#define MS(v) _MS=_MS+v; emit (v)ms;

native/pos do
    u32 MS = 0;
    tceu_callback_ret CB_TESTS_F (int cmd, tceu_callback_arg p1, tceu_callback_arg p2, const char* file, u32 line) {
        tceu_callback_ret ret = { .is_handled=0 };
        if (cmd != CEU_CALLBACK_OUTPUT) {
            return ret;
        }
        switch (p1.num) {
            case CEU_OUTPUT_GET_TIME:
                *(*((u32**)p2.ptr)) = MS;
                ret.is_handled = 1;
                break;
        }
        return ret;
    }
    tceu_callback CB_TESTS = { &CB_TESTS_F, NULL };
end
{ ceu_callback_register(&CB_TESTS); }

code/await Tone (var bool inc, var int i) -> void do
end

spawn do
    await async do
        emit IN_TOUCH(0);
        emit IN_TOUCH(1);
        //loop do
            MS(10000);
            loop _ in [1->10] do
                emit IN_TOUCH(0);
                MS(200);
                emit IN_TOUCH(0);
                MS(200);
                emit IN_TOUCH(1);
                MS(300);
                emit IN_TOUCH(1);
                MS(300);
            end
            loop _ in [1->10] do
                emit IN_TOUCH(0);
                MS(700);
                emit IN_TOUCH(1);
                MS(300);
            end
            MS(3000);
        //end
    end
end
